[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.9.0","content-config-digest","ddd318d06a3909d2","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://deansallinen.ca\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"experimentalDefaultStyles\":true},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12],"nixos-react-native-android",{"id":11,"data":13,"body":18,"filePath":19,"digest":20,"rendered":21,"legacyId":41},{"title":14,"description":15,"pubDate":16,"updatedDate":17},"NixOS for React Native Android development","Here's how I setup my NixOS for React Native Android development.",["Date","2024-04-12T07:00:00.000Z"],["Date","2024-09-13T07:00:00.000Z"],"Here's how I got a working setup for React Native Android development on NixOS. \n\nFirst off, is this the best setup? No. I still don't really know what I'm doing when it comes to Nix or NixOS. The combination here just happens to  work for me. Once I learn more about Nix and NixOS I'll optimize and make changes. Hopefully I'll remember to update this post too.\n\nWhy do this? My pop_os install broke when upgrading nvidia drivers and I had a drive failure when trying to recover from backup. Since I had to install an OS from scratch anyway, it seemed like a good opportunity to try something new. I'd heard about NixOS and fell in love with the idea of a declarative configuration. I already have some experience with immutable operating systems from running Fedora Silverblue on my laptop, so I thought it would be a great time to try Nix.\n\nOnce I figured out basic system configuration, I needed to get my environment setup to develop a react native android application for work.\n\n## System configuration\n\nStarting with the system wide configuration file. I enabled the `adb` program, included the `android-udev-rules`, setup flakes, and included my user in the `plugdev` and `adbuser` groups. \n\nI also added `node`, `yarn`, and `prettierd` here but they should go in the project flake (I just haven't moved them yet).\n\n```nix\n# /etc/nixos/configuration.nix\n\n{\n  config,\n  pkgs,\n  ...\n}: {\n  imports = [\n    ./hardware-configuration.nix\n  ];\n\n  # ... Other lines omitted\n\n  nixpkgs.config.allowUnfree = true;\n\n  # NixOS doesn't have a plugdev group - needed for connecting via adb\n  users.groups.plugdev = {};\n\n  users.users.dean = {\n    isNormalUser = true;\n    description = \"dean\";\n    # Not sure if both adbusers and plugdev are needed, but this works\n    extraGroups = [\"networkmanager\" \"wheel\" \"adbusers\" \"plugdev\"];\n    packages = with pkgs; [];\n    shell = pkgs.zsh;\n  };\n\n  # Flakes enabled for the direnv setup\n  nix.settings.experimental-features = [ \"nix-command\" \"flakes\" ];\n  environment.systemPackages = with pkgs; [\n    wget\n    unzip\n    gcc # c compiler - not sure if needed, including anyways\n    alejandra # .nix formatting\n    wl-clipboard # clipboard integration\n    nodejs_20 # This should be moved to the project flake\n    nodePackages.yarn # Same with this\n    prettierd # And this\n    # android-tools # Couldn't get this to work: Doesn't add udev rules.\n  ];\n\n  # This is the one that correctly adds the udev rules!\n  programs.adb.enable = true;\n\n  # Not sure if this is necessary if the above is set?\n  services.udev.packages = [\n\tpkgs.android-udev-rules\n  ];\n\n  # ... Other lines omitted\n\n```\n\n`direnv` is how nix will create a shell with the needed environement variables and project dependencies when we `cd` into the directory. I've added it to home manager but this could have easily gone into `configuration.nix` instead.\n\n```nix\n# ~/.config/home-manager/home.nix\n\n{\n  config,\n  pkgs,\n  ...\n}: {\n  home.username = \"dean\";\n  home.homeDirectory = \"/home/dean\";\n  home.stateVersion = \"23.11\"; \n\n  # Not sure if this is needed, had it set anyways\n  targets.genericLinux.enable = true;\n\n  programs.home-manager.enable = true;\n\n  # ... Other lines omitted\n\n  programs.direnv = {\n    enable = true;\n    enableZshIntegration = true;\n    nix-direnv.enable = true;\n  };\n}\n```\n\n## Project configuration\n\n\nHere we create the flake that sets up all the android-sdk dependencies. I should figure out how to include `nodejs` and `yarn` and such here too.\n\nNote: The versions listed are specific to my project.\n\n```nix\n# ~/code/my-react-native-project/flake.nix\n\n{\n  description = \"My React Native project\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs\";\n    devshell.url = \"github:numtide/devshell\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n    android.url = \"github:tadfisher/android-nixpkgs\";\n  };\n\n  outputs = {\n    self,\n    nixpkgs,\n    devshell,\n    flake-utils,\n    android,\n  }:\n    {\n      overlay = final: prev: {\n        inherit (self.packages.${final.system}) android-sdk android-studio;\n      };\n    }\n    // flake-utils.lib.eachSystem [\"aarch64-darwin\" \"x86_64-darwin\" \"x86_64-linux\"] (\n      system: let\n        pkgs = import nixpkgs {\n          inherit system;\n          config.allowUnfree = true;\n          overlays = [\n            devshell.overlays.default\n            self.overlay\n          ];\n        };\n\n        androidConfig = {\n          defaultBuildToolsVersion = \"34.0.0\"; # This value can be passed to the devshell in the future\n          sdkPkgs = android.sdk.${system} (sdkPkgs:\n            with sdkPkgs; [\n              # Useful packages for building and testing.\n              build-tools-34-0-0\n              cmdline-tools-latest\n              emulator\n              platform-tools\n              platforms-android-34\n\n              # Other useful packages for a development environment.\n              ndk-26-1-10909125\n              # skiaparser-3\n              sources-android-34\n            ]);\n        };\n      in {\n        packages = {\n          android-sdk = androidConfig.sdkPkgs;\n\n          # Android Studio in nixpkgs is currently packaged for x86_64-linux only.\n          android-studio = pkgs.androidStudioPackages.stable;\n          # android-studio = pkgs.androidStudioPackages.beta;\n          # android-studio = pkgs.androidStudioPackages.preview;\n          # android-studio = pkgs.androidStudioPackage.canary;\n        };\n\n        devShell = import ./devshell.nix {inherit pkgs;};\n      }\n    );\n}\n\n```\n\nIn `devshell.nix` we create a new shell environment with all the required packages and environment variables. \n\n\n```nix\n# ~/code/my-react-native-project/devshell.nix\n\n# Documentation: https://github.com/numtide/devshell\n{pkgs}:\nwith pkgs;\n  devshell.mkShell {\n    name = \"android-project\";\n    motd = ''\n      Entered the Android app development environment.\n    '';\n    env = [\n      {\n        name = \"ANDROID_HOME\";\n        value = \"${android-sdk}/share/android-sdk\";\n      }\n      {\n        name = \"ANDROID_SDK_ROOT\";\n        value = \"${android-sdk}/share/android-sdk\";\n      }\n      {\n        name = \"JAVA_HOME\";\n        value = jdk17.home;\n      }\n      {\n        name = \"GRADLE_OPTS\";\n        value = \"-Dorg.gradle.project.android.aapt2FromMavenOverride=${aapt}/bin/aapt2\"; # Using the nixpkgs aapt2 to resolve an issue with dynamically linked executables\n      }\n      {\n        name = \"PATH\";\n        prefix = \"${android-sdk}/share/android-sdk/emulator\";\n      }\n      {\n        name = \"PATH\";\n        prefix = \"${android-sdk}/share/android-sdk/platform-tools\";\n      }\n    ];\n    commands = [\n      {\n        help = \"take screenshot of connected android device\";\n        name = \"adbcap\";\n        command = \"adb exec-out screencap -p > /tmp/screen-$(date +%Y-%m-%d-%H.%M.%S).png\";\n      }\n    ];\n    packages = [\n      android-studio\n      android-sdk\n      gradle\n      jdk17\n      aapt\n      # here is where I'd add nodejs and yarn \n    ];\n  }\n```\n\nAnd finally, the `.envrc` needed for `direnv` to know to use the flake.\n\n```nix\n# ~/code/my-react-native-project/.envrc\n\nif ! has nix_direnv_version || ! nix_direnv_version 2.1.1; then\n  source_url \"https://raw.githubusercontent.com/nix-community/nix-direnv/2.1.1/direnvrc\" \"sha256-b6qJ4r34rbE23yWjMqbmu3ia2z4b2wIlZUksBke/ol0=\"\nfi\nuse flake\n```\n\nNote: you'll need to add the changes in git otherwise you'll get some error stating flake.nix is not found. `git add -A && git commit -m \"Add flake.nix\"` worked for me.\n\nNow with all of that set up, when I `cd` into my project directory I get a change to my prompt confirming my environment is setup.\n\n```bash\n~\n‚ùØ cd code/my-react-native-project\ndirenv: loading ~/code/my-react-native-project/.envrc\ndirenv: using flake\ndirenv: nix-direnv: using cached dev shell\nEntered the Android app development environment.\n\ndirenv: export +ANDROID_HOME +ANDROID_SDK_ROOT +DEVSHELL_DIR +GRADLE_OPTS +IN_NIX_SHELL +JAVA_HOME +NIXPKGS_PATH +PRJ_DATA_DIR +PRJ_ROOT +name ~PATH ~XDG_DATA_DIRS\n\n~/code/my-react-native-project main*\nandroid-project-env ‚ùØ echo $ANDROID_HOME\n/nix/store/74iwz121cnycgr5zcx1fkb4r1j8czncx-android-sdk-env/share/android-sdk\n```\n\nI can now run `adb devices` and see my connected device. This was hard to get working, but the combination of user groups and adb in `configuration.nix` seems to do the trick. \n\nAlso, I used to select Transfer Files when connecting my device via USB but for some reason I now need to select Transfer Photos. That's also part of why it was so confusing to setup. Looking into the udev rules that are added by adb, it's something to do with the model of phone I have. Your mileage may vary.\n\n```bash\n~/code/my-react-native-project main*\nandroid-project-env ‚ùØ adb devices\nList of devices attached\n58301a9d\tdevice\n```\n\nNow I can start my react-native project as usual and get back to work. \n\n## Resources\n- https://github.com/eekrain/nix-react-native\n- https://github.com/tadfisher/android-nixpkgs\n- https://developer.android.com/studio/run/device\n- https://nixos.wiki/wiki/Android\n- https://wiki.archlinux.org/title/Android_Debug_Bridge\n- https://search.nixos.org/packages","src/content/blog/nixos-react-native-android.md","246b6d4b69b63470",{"html":22,"metadata":23},"\u003Cp>Here‚Äôs how I got a working setup for React Native Android development on NixOS.\u003C/p>\n\u003Cp>First off, is this the best setup? No. I still don‚Äôt really know what I‚Äôm doing when it comes to Nix or NixOS. The combination here just happens to  work for me. Once I learn more about Nix and NixOS I‚Äôll optimize and make changes. Hopefully I‚Äôll remember to update this post too.\u003C/p>\n\u003Cp>Why do this? My pop_os install broke when upgrading nvidia drivers and I had a drive failure when trying to recover from backup. Since I had to install an OS from scratch anyway, it seemed like a good opportunity to try something new. I‚Äôd heard about NixOS and fell in love with the idea of a declarative configuration. I already have some experience with immutable operating systems from running Fedora Silverblue on my laptop, so I thought it would be a great time to try Nix.\u003C/p>\n\u003Cp>Once I figured out basic system configuration, I needed to get my environment setup to develop a react native android application for work.\u003C/p>\n\u003Ch2 id=\"system-configuration\">System configuration\u003C/h2>\n\u003Cp>Starting with the system wide configuration file. I enabled the \u003Ccode>adb\u003C/code> program, included the \u003Ccode>android-udev-rules\u003C/code>, setup flakes, and included my user in the \u003Ccode>plugdev\u003C/code> and \u003Ccode>adbuser\u003C/code> groups.\u003C/p>\n\u003Cp>I also added \u003Ccode>node\u003C/code>, \u003Ccode>yarn\u003C/code>, and \u003Ccode>prettierd\u003C/code> here but they should go in the project flake (I just haven‚Äôt moved them yet).\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"nix\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># /etc/nixos/configuration.nix\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  config\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  pkgs\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  imports\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    ./hardware-configuration.nix\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # ... Other lines omitted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  nixpkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">config\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">allowUnfree\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # NixOS doesn't have a plugdev group - needed for connecting via adb\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  users\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">groups\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">plugdev\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  users\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">users\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">dean\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    isNormalUser\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    description\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"dean\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    # Not sure if both adbusers and plugdev are needed, but this works\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    extraGroups\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"networkmanager\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"wheel\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"adbusers\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"plugdev\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    packages\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> with\u003C/span>\u003Cspan style=\"color:#FFAB70\"> pkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; [];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    shell\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#FFAB70\"> pkgs\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">zsh\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # Flakes enabled for the direnv setup\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  nix\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">settings\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">experimental-features\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [ \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"nix-command\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"flakes\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  environment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">systemPackages\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> with\u003C/span>\u003Cspan style=\"color:#FFAB70\"> pkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    wget\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    unzip\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    gcc\u003C/span>\u003Cspan style=\"color:#6A737D\"> # c compiler - not sure if needed, including anyways\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    alejandra\u003C/span>\u003Cspan style=\"color:#6A737D\"> # .nix formatting\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    wl-clipboard\u003C/span>\u003Cspan style=\"color:#6A737D\"> # clipboard integration\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    nodejs_20\u003C/span>\u003Cspan style=\"color:#6A737D\"> # This should be moved to the project flake\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    nodePackages\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">yarn\u003C/span>\u003Cspan style=\"color:#6A737D\"> # Same with this\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">    prettierd\u003C/span>\u003Cspan style=\"color:#6A737D\"> # And this\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    # android-tools # Couldn't get this to work: Doesn't add udev rules.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # This is the one that correctly adds the udev rules!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  programs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">adb\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">enable\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # Not sure if this is necessary if the above is set?\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  services\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">udev\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">packages\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">\tpkgs\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">android-udev-rules\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # ... Other lines omitted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Ccode>direnv\u003C/code> is how nix will create a shell with the needed environement variables and project dependencies when we \u003Ccode>cd\u003C/code> into the directory. I‚Äôve added it to home manager but this could have easily gone into \u003Ccode>configuration.nix\u003C/code> instead.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"nix\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># ~/.config/home-manager/home.nix\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  config\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  pkgs\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  home\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">username\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"dean\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  home\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">homeDirectory\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"/home/dean\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  home\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stateVersion\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"23.11\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # Not sure if this is needed, had it set anyways\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  targets\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">genericLinux\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">enable\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  programs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">home-manager\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">enable\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  # ... Other lines omitted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  programs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">direnv\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    enable\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    enableZshIntegration\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    nix-direnv\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">enable\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"project-configuration\">Project configuration\u003C/h2>\n\u003Cp>Here we create the flake that sets up all the android-sdk dependencies. I should figure out how to include \u003Ccode>nodejs\u003C/code> and \u003Ccode>yarn\u003C/code> and such here too.\u003C/p>\n\u003Cp>Note: The versions listed are specific to my project.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"nix\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># ~/code/my-react-native-project/flake.nix\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  description\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"My React Native project\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  inputs\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    nixpkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">url\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"github:NixOS/nixpkgs\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    devshell\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">url\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"github:numtide/devshell\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    flake-utils\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">url\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"github:numtide/flake-utils\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    android\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">url\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"github:tadfisher/android-nixpkgs\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  outputs\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    self\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    nixpkgs\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    devshell\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    flake-utils\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    android\u003C/span>\u003Cspan style=\"color:#F97583\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      overlay\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> final: prev: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        inherit\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">self\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">packages\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">${\u003C/span>\u003Cspan style=\"color:#FFAB70\">final\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">system\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}) \u003C/span>\u003Cspan style=\"color:#B392F0\">android-sdk\u003C/span>\u003Cspan style=\"color:#B392F0\"> android-studio\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    //\u003C/span>\u003Cspan style=\"color:#FFAB70\"> flake-utils\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">lib\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">eachSystem\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"aarch64-darwin\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"x86_64-darwin\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"x86_64-linux\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      system: \u003C/span>\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        pkgs\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> import\u003C/span>\u003Cspan style=\"color:#FFAB70\"> nixpkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">          inherit\u003C/span>\u003Cspan style=\"color:#B392F0\"> system\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          config\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">allowUnfree\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          overlays\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            devshell\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">overlays\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">default\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">            self\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">overlay\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        androidConfig\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          defaultBuildToolsVersion\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"34.0.0\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\"># This value can be passed to the devshell in the future\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          sdkPkgs\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#FFAB70\"> android\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">sdk\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">${\u003C/span>\u003Cspan style=\"color:#FFAB70\">system\u003C/span>\u003Cspan style=\"color:#E1E4E8\">} (sdkPkgs:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            with\u003C/span>\u003Cspan style=\"color:#FFAB70\"> sdkPkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">              # Useful packages for building and testing.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              build-tools-34-0-0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              cmdline-tools-latest\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              emulator\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              platform-tools\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              platforms-android-34\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">              # Other useful packages for a development environment.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              ndk-26-1-10909125\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">              # skiaparser-3\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">              sources-android-34\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            ]);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        packages\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          android-sdk\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#FFAB70\"> androidConfig\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">sdkPkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">          # Android Studio in nixpkgs is currently packaged for x86_64-linux only.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          android-studio\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#FFAB70\"> pkgs\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">androidStudioPackages\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">stable\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">          # android-studio = pkgs.androidStudioPackages.beta;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">          # android-studio = pkgs.androidStudioPackages.preview;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">          # android-studio = pkgs.androidStudioPackage.canary;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        devShell\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> import\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ./devshell.nix\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003Cspan style=\"color:#F97583\">inherit\u003C/span>\u003Cspan style=\"color:#B392F0\"> pkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>In \u003Ccode>devshell.nix\u003C/code> we create a new shell environment with all the required packages and environment variables.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"nix\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># ~/code/my-react-native-project/devshell.nix\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># Documentation: https://github.com/numtide/devshell\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{pkgs}:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">with\u003C/span>\u003Cspan style=\"color:#FFAB70\"> pkgs\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  devshell\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">mkShell\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"android-project\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    motd\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ''\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">      Entered the Android app development environment.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    ''\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    env\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"ANDROID_HOME\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        value\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">${\u003C/span>\u003Cspan style=\"color:#79B8FF\">android-sdk\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/share/android-sdk\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"ANDROID_SDK_ROOT\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        value\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">${\u003C/span>\u003Cspan style=\"color:#79B8FF\">android-sdk\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/share/android-sdk\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"JAVA_HOME\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        value\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#FFAB70\"> jdk17\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#FFAB70\">home\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"GRADLE_OPTS\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        value\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"-Dorg.gradle.project.android.aapt2FromMavenOverride=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">${\u003C/span>\u003Cspan style=\"color:#79B8FF\">aapt\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/bin/aapt2\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\"># Using the nixpkgs aapt2 to resolve an issue with dynamically linked executables\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"PATH\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        prefix\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">${\u003C/span>\u003Cspan style=\"color:#79B8FF\">android-sdk\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/share/android-sdk/emulator\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"PATH\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        prefix\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">${\u003C/span>\u003Cspan style=\"color:#79B8FF\">android-sdk\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/share/android-sdk/platform-tools\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    commands\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        help\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"take screenshot of connected android device\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        name\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"adbcap\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        command\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"adb exec-out screencap -p > /tmp/screen-$(date +%Y-%m-%d-%H.%M.%S).png\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    packages\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">      android-studio\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">      android-sdk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">      gradle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">      jdk17\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">      aapt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">      # here is where I'd add nodejs and yarn \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>And finally, the \u003Ccode>.envrc\u003C/code> needed for \u003Ccode>direnv\u003C/code> to know to use the flake.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"nix\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\"># ~/code/my-react-native-project/.envrc\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#F97583\"> !\u003C/span>\u003Cspan style=\"color:#FFAB70\"> has\u003C/span>\u003Cspan style=\"color:#FFAB70\"> nix_direnv_version\u003C/span>\u003Cspan style=\"color:#F97583\"> ||\u003C/span>\u003Cspan style=\"color:#F97583\"> !\u003C/span>\u003Cspan style=\"color:#FFAB70\"> nix_direnv_version\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#FDAEB7;font-style:italic\">;\u003C/span>\u003Cspan style=\"color:#F97583\"> then\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  source_url\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"https://raw.githubusercontent.com/nix-community/nix-direnv/2.1.1/direnvrc\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"sha256-b6qJ4r34rbE23yWjMqbmu3ia2z4b2wIlZUksBke/ol0=\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">fi\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">use\u003C/span>\u003Cspan style=\"color:#FFAB70\"> flake\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Note: you‚Äôll need to add the changes in git otherwise you‚Äôll get some error stating flake.nix is not found. \u003Ccode>git add -A &#x26;&#x26; git commit -m \"Add flake.nix\"\u003C/code> worked for me.\u003C/p>\n\u003Cp>Now with all of that set up, when I \u003Ccode>cd\u003C/code> into my project directory I get a change to my prompt confirming my environment is setup.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">~\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">‚ùØ\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> cd\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> code/my-react-native-project\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">direnv:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> loading\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~/code/my-react-native-project/.envrc\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">direnv:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> using\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> flake\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">direnv:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> nix-direnv:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> using\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> cached\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> dev\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> shell\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Entered\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> the\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Android\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> app\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> development\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> environment.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">direnv:\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> export\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +ANDROID_HOME\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +ANDROID_SDK_ROOT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +DEVSHELL_DIR\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +GRADLE_OPTS\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +IN_NIX_SHELL\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +JAVA_HOME\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +NIXPKGS_PATH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +PRJ_DATA_DIR\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +PRJ_ROOT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> +name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~PATH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ~XDG_DATA_DIRS\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">~\u003C/span>\u003Cspan style=\"color:#E1E4E8\">/code/my-react-native-project main\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">android-project-env\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ‚ùØ\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $ANDROID_HOME\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">/nix/store/74iwz121cnycgr5zcx1fkb4r1j8czncx-android-sdk-env/share/android-sdk\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>I can now run \u003Ccode>adb devices\u003C/code> and see my connected device. This was hard to get working, but the combination of user groups and adb in \u003Ccode>configuration.nix\u003C/code> seems to do the trick.\u003C/p>\n\u003Cp>Also, I used to select Transfer Files when connecting my device via USB but for some reason I now need to select Transfer Photos. That‚Äôs also part of why it was so confusing to setup. Looking into the udev rules that are added by adb, it‚Äôs something to do with the model of phone I have. Your mileage may vary.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">~\u003C/span>\u003Cspan style=\"color:#E1E4E8\">/code/my-react-native-project main\u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">android-project-env\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ‚ùØ\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> adb\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> devices\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> of\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> devices\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> attached\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">58301a9d\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\tdevice\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Now I can start my react-native project as usual and get back to work.\u003C/p>\n\u003Ch2 id=\"resources\">Resources\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/eekrain/nix-react-native\">https://github.com/eekrain/nix-react-native\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/tadfisher/android-nixpkgs\">https://github.com/tadfisher/android-nixpkgs\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developer.android.com/studio/run/device\">https://developer.android.com/studio/run/device\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://nixos.wiki/wiki/Android\">https://nixos.wiki/wiki/Android\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://wiki.archlinux.org/title/Android_Debug_Bridge\">https://wiki.archlinux.org/title/Android_Debug_Bridge\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://search.nixos.org/packages\">https://search.nixos.org/packages\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":24,"localImagePaths":35,"remoteImagePaths":36,"frontmatter":37,"imagePaths":40},[25,29,32],{"depth":26,"slug":27,"text":28},2,"system-configuration","System configuration",{"depth":26,"slug":30,"text":31},"project-configuration","Project configuration",{"depth":26,"slug":33,"text":34},"resources","Resources",[],[],{"title":14,"description":15,"pubDate":38,"updatedDate":39},"Apr 12 2024","Sep 13 2024",[],"nixos-react-native-android.md"]